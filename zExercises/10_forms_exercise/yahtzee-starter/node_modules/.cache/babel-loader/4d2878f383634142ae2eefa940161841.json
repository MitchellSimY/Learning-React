{"ast":null,"code":"var _jsxFileName = \"/Users/msy/Programming/udemy/react/Learning-React/zExercises/10_forms_exercise/yahtzee-starter/src/Game.js\";\nimport React, { Component } from \"react\";\nimport Dice from \"./Dice\";\nimport ScoreTable from \"./ScoreTable\";\nimport \"./Game.css\"; // Constant variables that define the game attributes like number of dies and available roles.\n\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props); // States that include the dice array, with length of NUM_DICE.\n    // 'locked' which determines whether the die position is locked from toggles.\n    // 'rollsLeft' which is given the number of rolls.\n\n    this.state = {\n      dice: Array.from({\n        length: NUM_DICE\n      }),\n      locked: Array(NUM_DICE).fill(false),\n      rollsLeft: NUM_ROLLS,\n      // scores is what appears to be an object.\n      scores: {\n        ones: undefined,\n        twos: undefined,\n        threes: undefined,\n        fours: undefined,\n        fives: undefined,\n        sixes: undefined,\n        threeOfKind: undefined,\n        fourOfKind: undefined,\n        fullHouse: undefined,\n        smallStraight: undefined,\n        largeStraight: undefined,\n        yahtzee: undefined,\n        chance: undefined\n      }\n    };\n    this.roll = this.roll.bind(this);\n    this.doScore = this.doScore.bind(this);\n    this.toggleLocked = this.toggleLocked.bind(this);\n  }\n\n  roll(evt) {\n    // roll dice whose indexes are in reroll\n    this.setState(st => ({\n      // Dice state.\n      // If die is not locked at index, then assign random number from 1-6 \n      dice: st.dice.map((d, i) => st.locked[i] ? d : Math.ceil(Math.random() * 6)),\n      // if rollsleft = 0, every die is locked.\n      locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n      // subtracting one from rolls.\n      rollsLeft: st.rollsLeft - 1\n    }));\n  } // Function that does the score. \n  // It's given the rule name and the rule function.\n  // The rulename is utilized to point the the state name.\n  // the ruleFn is a function that provides value to the state variable.\n\n\n  doScore(rulename, ruleFn) {\n    if (this.state.rollsLeft <= NUM_ROLLS - 1) {\n      // evaluate this ruleFn with the dice and score this rulename\n      this.setState(st => ({\n        scores: { ...st.scores,\n          [rulename]: ruleFn(this.state.dice)\n        },\n        // rollsLeft resets after every score mark.\n        rollsLeft: NUM_ROLLS,\n        // No locked dies afterwards either.\n        locked: Array(NUM_DICE).fill(false)\n      }));\n      this.roll();\n    } else {\n      return null;\n    }\n  } // function that toggles lock for Die?\n\n\n  toggleLocked(idx) {\n    // toggle whether idx is in locked or not\n    console.log(idx);\n    this.setState(st => ({\n      locked: [...st.locked.slice(0, idx), !st.locked[idx], ...st.locked.slice(idx + 1)]\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"Game-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"App-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, \"Yahtzee!\"), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"Game-dice-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Dice, {\n      dice: this.state.dice,\n      locked: this.state.locked,\n      handleClick: this.toggleLocked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Game-button-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Game-reroll\",\n      disabled: this.state.locked.every(x => x) || this.state.rollsLeft === 0,\n      onClick: this.roll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, this.state.rollsLeft, \" Rerolls Left\")))), /*#__PURE__*/React.createElement(ScoreTable, {\n      doScore: this.doScore,\n      scores: this.state.scores,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/msy/Programming/udemy/react/Learning-React/zExercises/10_forms_exercise/yahtzee-starter/src/Game.js"],"names":["React","Component","Dice","ScoreTable","NUM_DICE","NUM_ROLLS","Game","constructor","props","state","dice","Array","from","length","locked","fill","rollsLeft","scores","ones","undefined","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","roll","bind","doScore","toggleLocked","evt","setState","st","map","d","i","Math","ceil","random","rulename","ruleFn","idx","console","log","slice","render","every","x"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Dice from \"./Dice\";\nimport ScoreTable from \"./ScoreTable\";\nimport \"./Game.css\";\n\n// Constant variables that define the game attributes like number of dies and available roles.\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    // States that include the dice array, with length of NUM_DICE.\n    // 'locked' which determines whether the die position is locked from toggles.\n    // 'rollsLeft' which is given the number of rolls.\n    this.state = {\n      dice: Array.from({ length: NUM_DICE }),\n      locked: Array(NUM_DICE).fill(false),\n      rollsLeft: NUM_ROLLS,\n\n      // scores is what appears to be an object.\n      scores: {\n        ones: undefined,\n        twos: undefined,\n        threes: undefined,\n        fours: undefined,\n        fives: undefined,\n        sixes: undefined,\n        threeOfKind: undefined,\n        fourOfKind: undefined,\n        fullHouse: undefined,\n        smallStraight: undefined,\n        largeStraight: undefined,\n        yahtzee: undefined,\n        chance: undefined\n      }\n    };\n    this.roll = this.roll.bind(this);\n    this.doScore = this.doScore.bind(this);\n    this.toggleLocked = this.toggleLocked.bind(this);\n  }\n\n  roll(evt) {\n\n    // roll dice whose indexes are in reroll\n    this.setState(st => ({\n      // Dice state.\n      // If die is not locked at index, then assign random number from 1-6 \n      dice: st.dice.map((d, i) =>\n        st.locked[i] ? d : Math.ceil(Math.random() * 6)\n      ),\n      // if rollsleft = 0, every die is locked.\n      locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n      // subtracting one from rolls.\n      rollsLeft: st.rollsLeft - 1\n    }));\n  }\n  // Function that does the score. \n  // It's given the rule name and the rule function.\n  // The rulename is utilized to point the the state name.\n  // the ruleFn is a function that provides value to the state variable.\n  doScore(rulename, ruleFn) {\n    if (this.state.rollsLeft <= NUM_ROLLS - 1) {\n      // evaluate this ruleFn with the dice and score this rulename\n      this.setState(st => ({\n        scores: { ...st.scores, [rulename]: ruleFn(this.state.dice) },\n        // rollsLeft resets after every score mark.\n        rollsLeft: NUM_ROLLS,\n        // No locked dies afterwards either.\n        locked: Array(NUM_DICE).fill(false)\n      }));\n      this.roll();\n    } else {\n      return null;\n    }\n\n\n\n\n  }\n\n  // function that toggles lock for Die?\n  toggleLocked(idx) {\n    // toggle whether idx is in locked or not\n    console.log(idx)\n    this.setState(st => ({\n      locked: [\n        ...st.locked.slice(0, idx),\n        !st.locked[idx],\n        ...st.locked.slice(idx + 1)]\n    }));\n  }\n\n  render() {\n    return (\n      <div className='Game'>\n        <header className='Game-header'>\n          <h1 className='App-title'>Yahtzee!</h1>\n          <section className='Game-dice-section'>\n\n            {/* Dice component that then goes into the Die component.\n          Dice component is given props of the dice state, whethere it's locked,\n          and a handleClick. */}\n            <Dice\n              dice={this.state.dice}\n              locked={this.state.locked}\n              handleClick={this.toggleLocked}\n            />\n\n            {/* Rolling Dices button. */}\n            <div className='Game-button-wrapper'>\n              <button\n                className='Game-reroll'\n                disabled={this.state.locked.every(x => x) || this.state.rollsLeft === 0}\n                onClick={this.roll}\n              >\n                {this.state.rollsLeft} Rerolls Left\n              </button>\n            </div>\n          </section>\n        </header>\n\n        {/* Score table component. Reaches for function called doScore\n        and has a state which signifies the score. */}\n        <ScoreTable doScore={this.doScore} scores={this.state.scores} />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}